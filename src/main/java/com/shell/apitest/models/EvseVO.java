/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for EvseVO type.
 */
public class EvseVO {
    private Integer uid;
    private String externalId;
    private String evseId;
    private EvseVOStatusEnum status;
    private List<ConnectorVO> connectors;
    private EvseVOAuthorizationMethodsEnum authorizationMethods;
    private String updated;
    private String deleted;
    private String physicalReference;

    /**
     * Default constructor.
     */
    public EvseVO() {
    }

    /**
     * Initialization constructor.
     * @param  uid  Integer value for uid.
     * @param  externalId  String value for externalId.
     * @param  evseId  String value for evseId.
     * @param  status  EvseVOStatusEnum value for status.
     * @param  connectors  List of ConnectorVO value for connectors.
     * @param  authorizationMethods  EvseVOAuthorizationMethodsEnum value for authorizationMethods.
     * @param  updated  String value for updated.
     * @param  deleted  String value for deleted.
     * @param  physicalReference  String value for physicalReference.
     */
    public EvseVO(
            Integer uid,
            String externalId,
            String evseId,
            EvseVOStatusEnum status,
            List<ConnectorVO> connectors,
            EvseVOAuthorizationMethodsEnum authorizationMethods,
            String updated,
            String deleted,
            String physicalReference) {
        this.uid = uid;
        this.externalId = externalId;
        this.evseId = evseId;
        this.status = status;
        this.connectors = connectors;
        this.authorizationMethods = authorizationMethods;
        this.updated = updated;
        this.deleted = deleted;
        this.physicalReference = physicalReference;
    }

    /**
     * Getter for Uid.
     * Internal identifier used to refer to single individual EVSE unit.
     * @return Returns the Integer
     */
    @JsonGetter("uid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUid() {
        return uid;
    }

    /**
     * Setter for Uid.
     * Internal identifier used to refer to single individual EVSE unit.
     * @param uid Value for Integer
     */
    @JsonSetter("uid")
    public void setUid(Integer uid) {
        this.uid = uid;
    }

    /**
     * Getter for ExternalId.
     * Identifier of the Evse as given by the Operator, unique for that Operator
     * @return Returns the String
     */
    @JsonGetter("externalId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getExternalId() {
        return externalId;
    }

    /**
     * Setter for ExternalId.
     * Identifier of the Evse as given by the Operator, unique for that Operator
     * @param externalId Value for String
     */
    @JsonSetter("externalId")
    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    /**
     * Getter for EvseId.
     * Standard EVSEId identifier (ISO-IEC-15118)
     * @return Returns the String
     */
    @JsonGetter("evseId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEvseId() {
        return evseId;
    }

    /**
     * Setter for EvseId.
     * Standard EVSEId identifier (ISO-IEC-15118)
     * @param evseId Value for String
     */
    @JsonSetter("evseId")
    public void setEvseId(String evseId) {
        this.evseId = evseId;
    }

    /**
     * Getter for Status.
     * The current status of the EVSE units availability
     * @return Returns the EvseVOStatusEnum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EvseVOStatusEnum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * The current status of the EVSE units availability
     * @param status Value for EvseVOStatusEnum
     */
    @JsonSetter("status")
    public void setStatus(EvseVOStatusEnum status) {
        this.status = status;
    }

    /**
     * Getter for Connectors.
     * List of all connectors available on this EVSE unit.
     * @return Returns the List of ConnectorVO
     */
    @JsonGetter("connectors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ConnectorVO> getConnectors() {
        return connectors;
    }

    /**
     * Setter for Connectors.
     * List of all connectors available on this EVSE unit.
     * @param connectors Value for List of ConnectorVO
     */
    @JsonSetter("connectors")
    public void setConnectors(List<ConnectorVO> connectors) {
        this.connectors = connectors;
    }

    /**
     * Getter for AuthorizationMethods.
     * Methods that can be used to Authorize sessions on this EVSE
     * @return Returns the EvseVOAuthorizationMethodsEnum
     */
    @JsonGetter("authorizationMethods")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EvseVOAuthorizationMethodsEnum getAuthorizationMethods() {
        return authorizationMethods;
    }

    /**
     * Setter for AuthorizationMethods.
     * Methods that can be used to Authorize sessions on this EVSE
     * @param authorizationMethods Value for EvseVOAuthorizationMethodsEnum
     */
    @JsonSetter("authorizationMethods")
    public void setAuthorizationMethods(EvseVOAuthorizationMethodsEnum authorizationMethods) {
        this.authorizationMethods = authorizationMethods;
    }

    /**
     * Getter for Updated.
     * ISO8601-compliant UTC datetime of the last update of the EVSE
     * @return Returns the String
     */
    @JsonGetter("updated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUpdated() {
        return updated;
    }

    /**
     * Setter for Updated.
     * ISO8601-compliant UTC datetime of the last update of the EVSE
     * @param updated Value for String
     */
    @JsonSetter("updated")
    public void setUpdated(String updated) {
        this.updated = updated;
    }

    /**
     * Getter for Deleted.
     * optional ISO8601-compliant UTC deletion timestamp of the Evse
     * @return Returns the String
     */
    @JsonGetter("deleted")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeleted() {
        return deleted;
    }

    /**
     * Setter for Deleted.
     * optional ISO8601-compliant UTC deletion timestamp of the Evse
     * @param deleted Value for String
     */
    @JsonSetter("deleted")
    public void setDeleted(String deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for PhysicalReference.
     * An optional number/string printed on the outside of the EVSE for visual identification
     * @return Returns the String
     */
    @JsonGetter("physicalReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPhysicalReference() {
        return physicalReference;
    }

    /**
     * Setter for PhysicalReference.
     * An optional number/string printed on the outside of the EVSE for visual identification
     * @param physicalReference Value for String
     */
    @JsonSetter("physicalReference")
    public void setPhysicalReference(String physicalReference) {
        this.physicalReference = physicalReference;
    }

    /**
     * Converts this EvseVO into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "EvseVO [" + "uid=" + uid + ", externalId=" + externalId + ", evseId=" + evseId
                + ", status=" + status + ", connectors=" + connectors + ", authorizationMethods="
                + authorizationMethods + ", updated=" + updated + ", deleted=" + deleted
                + ", physicalReference=" + physicalReference + "]";
    }

    /**
     * Builds a new {@link EvseVO.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link EvseVO.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .uid(getUid())
                .externalId(getExternalId())
                .evseId(getEvseId())
                .status(getStatus())
                .connectors(getConnectors())
                .authorizationMethods(getAuthorizationMethods())
                .updated(getUpdated())
                .deleted(getDeleted())
                .physicalReference(getPhysicalReference());
        return builder;
    }

    /**
     * Class to build instances of {@link EvseVO}.
     */
    public static class Builder {
        private Integer uid;
        private String externalId;
        private String evseId;
        private EvseVOStatusEnum status;
        private List<ConnectorVO> connectors;
        private EvseVOAuthorizationMethodsEnum authorizationMethods;
        private String updated;
        private String deleted;
        private String physicalReference;



        /**
         * Setter for uid.
         * @param  uid  Integer value for uid.
         * @return Builder
         */
        public Builder uid(Integer uid) {
            this.uid = uid;
            return this;
        }

        /**
         * Setter for externalId.
         * @param  externalId  String value for externalId.
         * @return Builder
         */
        public Builder externalId(String externalId) {
            this.externalId = externalId;
            return this;
        }

        /**
         * Setter for evseId.
         * @param  evseId  String value for evseId.
         * @return Builder
         */
        public Builder evseId(String evseId) {
            this.evseId = evseId;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  EvseVOStatusEnum value for status.
         * @return Builder
         */
        public Builder status(EvseVOStatusEnum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for connectors.
         * @param  connectors  List of ConnectorVO value for connectors.
         * @return Builder
         */
        public Builder connectors(List<ConnectorVO> connectors) {
            this.connectors = connectors;
            return this;
        }

        /**
         * Setter for authorizationMethods.
         * @param  authorizationMethods  EvseVOAuthorizationMethodsEnum value for
         *         authorizationMethods.
         * @return Builder
         */
        public Builder authorizationMethods(EvseVOAuthorizationMethodsEnum authorizationMethods) {
            this.authorizationMethods = authorizationMethods;
            return this;
        }

        /**
         * Setter for updated.
         * @param  updated  String value for updated.
         * @return Builder
         */
        public Builder updated(String updated) {
            this.updated = updated;
            return this;
        }

        /**
         * Setter for deleted.
         * @param  deleted  String value for deleted.
         * @return Builder
         */
        public Builder deleted(String deleted) {
            this.deleted = deleted;
            return this;
        }

        /**
         * Setter for physicalReference.
         * @param  physicalReference  String value for physicalReference.
         * @return Builder
         */
        public Builder physicalReference(String physicalReference) {
            this.physicalReference = physicalReference;
            return this;
        }

        /**
         * Builds a new {@link EvseVO} object using the set fields.
         * @return {@link EvseVO}
         */
        public EvseVO build() {
            return new EvseVO(uid, externalId, evseId, status, connectors, authorizationMethods,
                    updated, deleted, physicalReference);
        }
    }
}
