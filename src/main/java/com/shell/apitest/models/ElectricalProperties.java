/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ElectricalProperties type.
 */
public class ElectricalProperties {
    private ElectricalPropertiesPowerTypeEnum powerType;
    private Double voltage;
    private Double amperage;
    private Double maxElectricPower;

    /**
     * Default constructor.
     */
    public ElectricalProperties() {
    }

    /**
     * Initialization constructor.
     * @param  powerType  ElectricalPropertiesPowerTypeEnum value for powerType.
     * @param  voltage  Double value for voltage.
     * @param  amperage  Double value for amperage.
     * @param  maxElectricPower  Double value for maxElectricPower.
     */
    public ElectricalProperties(
            ElectricalPropertiesPowerTypeEnum powerType,
            Double voltage,
            Double amperage,
            Double maxElectricPower) {
        this.powerType = powerType;
        this.voltage = voltage;
        this.amperage = amperage;
        this.maxElectricPower = maxElectricPower;
    }

    /**
     * Getter for PowerType.
     * Power Type used in this connector.
     * @return Returns the ElectricalPropertiesPowerTypeEnum
     */
    @JsonGetter("powerType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ElectricalPropertiesPowerTypeEnum getPowerType() {
        return powerType;
    }

    /**
     * Setter for PowerType.
     * Power Type used in this connector.
     * @param powerType Value for ElectricalPropertiesPowerTypeEnum
     */
    @JsonSetter("powerType")
    public void setPowerType(ElectricalPropertiesPowerTypeEnum powerType) {
        this.powerType = powerType;
    }

    /**
     * Getter for Voltage.
     * Voltage in Volts for this connector
     * @return Returns the Double
     */
    @JsonGetter("voltage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getVoltage() {
        return voltage;
    }

    /**
     * Setter for Voltage.
     * Voltage in Volts for this connector
     * @param voltage Value for Double
     */
    @JsonSetter("voltage")
    public void setVoltage(Double voltage) {
        this.voltage = voltage;
    }

    /**
     * Getter for Amperage.
     * Electric Current in Amperes for this connector
     * @return Returns the Double
     */
    @JsonGetter("amperage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAmperage() {
        return amperage;
    }

    /**
     * Setter for Amperage.
     * Electric Current in Amperes for this connector
     * @param amperage Value for Double
     */
    @JsonSetter("amperage")
    public void setAmperage(Double amperage) {
        this.amperage = amperage;
    }

    /**
     * Getter for MaxElectricPower.
     * Power in Kilowatts for this connector
     * @return Returns the Double
     */
    @JsonGetter("maxElectricPower")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getMaxElectricPower() {
        return maxElectricPower;
    }

    /**
     * Setter for MaxElectricPower.
     * Power in Kilowatts for this connector
     * @param maxElectricPower Value for Double
     */
    @JsonSetter("maxElectricPower")
    public void setMaxElectricPower(Double maxElectricPower) {
        this.maxElectricPower = maxElectricPower;
    }

    /**
     * Converts this ElectricalProperties into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ElectricalProperties [" + "powerType=" + powerType + ", voltage=" + voltage
                + ", amperage=" + amperage + ", maxElectricPower=" + maxElectricPower + "]";
    }

    /**
     * Builds a new {@link ElectricalProperties.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ElectricalProperties.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .powerType(getPowerType())
                .voltage(getVoltage())
                .amperage(getAmperage())
                .maxElectricPower(getMaxElectricPower());
        return builder;
    }

    /**
     * Class to build instances of {@link ElectricalProperties}.
     */
    public static class Builder {
        private ElectricalPropertiesPowerTypeEnum powerType;
        private Double voltage;
        private Double amperage;
        private Double maxElectricPower;



        /**
         * Setter for powerType.
         * @param  powerType  ElectricalPropertiesPowerTypeEnum value for powerType.
         * @return Builder
         */
        public Builder powerType(ElectricalPropertiesPowerTypeEnum powerType) {
            this.powerType = powerType;
            return this;
        }

        /**
         * Setter for voltage.
         * @param  voltage  Double value for voltage.
         * @return Builder
         */
        public Builder voltage(Double voltage) {
            this.voltage = voltage;
            return this;
        }

        /**
         * Setter for amperage.
         * @param  amperage  Double value for amperage.
         * @return Builder
         */
        public Builder amperage(Double amperage) {
            this.amperage = amperage;
            return this;
        }

        /**
         * Setter for maxElectricPower.
         * @param  maxElectricPower  Double value for maxElectricPower.
         * @return Builder
         */
        public Builder maxElectricPower(Double maxElectricPower) {
            this.maxElectricPower = maxElectricPower;
            return this;
        }

        /**
         * Builds a new {@link ElectricalProperties} object using the set fields.
         * @return {@link ElectricalProperties}
         */
        public ElectricalProperties build() {
            return new ElectricalProperties(powerType, voltage, amperage, maxElectricPower);
        }
    }
}
